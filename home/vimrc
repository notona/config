set nocompatible
set t_Co=256

call plug#begin()
" easier to comment
Plug 'scrooloose/nerdcommenter'

" for syntax check
" 終了するのが遅くなるので入れるのやめた
" Plug 'scrooloose/syntastic'

" for language server
" :LspInstallServer が必要
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'

call plug#end()

filetype plugin indent on

" 特殊文字があると表示がずれる問題の対策
" のはずが、有効にすると悲惨なことに
"set ambiwidth=double
set ambiwidth=single

colorscheme koehler

nnoremap <Space>f f
nnoremap <Space>F F
nnoremap f <Nop>

nnoremap <silent> fc :<C-u>FufRenewCache!<CR>
nnoremap <silent> fb :<C-u>FufBuffer!<CR>
nnoremap <silent> ff :<C-u>FufFile!<C-r>=expand('%:~:.')[:-1-len(expand('%:~:.:t'))]<CR><CR>
nnoremap <silent> fm :<C-u>FufMruFile!<CR>
nnoremap <silent> tb :<C-u>tabnew<CR>:tabmove<CR>:FufBuffer!<CR>
nnoremap <silent> tf :<C-u>tabnew<CR>:tabmove<CR>:FufFile!<C-r>=expand('#:~:.')[:-1-len(expand('#:~:.:t'))]<CR><CR>
nnoremap <silent> tm :<C-u>tabnew<CR>:tabmove<CR>:FufMruFile!<CR>

syntax on
filetype plugin on
filetype indent on


set viminfo='50,\"14000,:0,n~/.viminfo

set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,euc-jp,sjis,iso-2022-jp,cp932
set fileformats=unix,dos,mac

set backspace=indent,eol,start
set formatoptions+=m
set list
set listchars=tab:>-,extends:<,trail:-
set hidden

set wildmenu
set showmatch

set wrapscan
set ignorecase
set smartcase
set incsearch
set hlsearch

set autoindent
set smartindent
set expandtab
set smarttab

"スワップファイルの出力先を ~/.vim/tmp/swap に変更
set directory=~/tmp/vim/swap
set noswapfile

"set tabstop=4
"set softtabstop=4
"set shiftwidth=4

set laststatus=2
set statusline=[%n]\ %t\ %y%{GetStatusEx()}\ %m%h%r=%l/%L,%c%V\ %P

" 環境によってデフォルトの色設定が異なるので明示的に指定する
highlight Normal ctermbg=black ctermfg=white
highlight StatusLine term=none cterm=none ctermfg=black ctermbg=grey
highlight CursorLine term=none cterm=none ctermfg=none ctermbg=darkgray
highlight Pmenu ctermbg=darkblue

highlight ZenkakuSpace cterm=underline ctermfg=lightblue
match ZenkakuSpace /　/

"inoremap <C-t> <C-v><Tab>
"inoremap <C-j> <Down>
"inoremap <C-k> <Up>
"inoremap <C-h> <Left>
"inoremap <C-l> <Right>

"nnoremap <C-l> <ESC>:ls<CR>
"nnoremap <C-p> <ESC>:bp<CR>
"nnoremap <C-n> <ESC>:bn<CR>

" ノーマルモードのまま空行を入れる
" キーバインドが重なっているのでコメントアウト
"nnoremap <C-o> :<C-u>call append(expand('.'), '')<Cr>

noremap j gj
noremap k gk
noremap gj j
noremap gk k

nnoremap ,.  :<C-u>edit $MYVIMRC<Enter>
nnoremap ,s. :<C-u>source $MYVIMRC<Enter>

nnoremap gc `[V`]
vnoremap gc :<C-u>normal gc<Enter>
onoremap gc :<C-u>normal gc<Enter>

autocmd FileType php setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab
autocmd FileType json setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
autocmd FileType javascript setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
autocmd FileType html setlocal tabstop=2 softtabstop=2 shiftwidth=2 noexpandtab
autocmd FileType ruby setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
autocmd FileType smarty setlocal tabstop=2 softtabstop=2 shiftwidth=2 noexpandtab
autocmd BufNewFile,BufRead *.twig set syntax=htmldjango

au BufNewFile,BufRead *.cgi  set ft=perl
au BufNewFile,BufRead *.psgi set ft=perl

function! GetStatusEx()
    let str = &fileformat
    if has("multi_byte") && &fileencoding != ""
        let str = &fileencoding . ":" . str
    endif
    let str = "[" . str . "]"
    return str
endfunction

"バイナリ編集(xxd)モード（vim -b での起動、もしくは *.bin ファイルを開くと発動します）
augroup BinaryXXD
  autocmd!
  autocmd BufReadPre  *.bin let &binary =1
  autocmd BufReadPost * if &binary | silent %!xxd -g 1
  autocmd BufReadPost * set ft=xxd | endif
  autocmd BufWritePre * if &binary | %!xxd -r | endif
  autocmd BufWritePost * if &binary | silent %!xxd -g 1
  autocmd BufWritePost * set nomod | endif
augroup END


